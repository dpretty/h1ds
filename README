## Installation instructions for Ubuntu 11.04 ##

# We're going to be installing python packages inside virtual environments so we don't have to worry about conflicting python library verions on the operating system (e.g. conflicting requirements with other sortware, etc).

# First, install some required packages

# In Ubuntu 11.04 there is a bug in with the virtuelenv package which causes problems when installing numpy with pip, so we'll just install virtualenv via the python installer instead. we also need a more recent version of fabric than is available in the ubuntu respoitory.

$ sudo apt-get install python-pip

$ sudo pip install virtualenv virtualenvwrapper fabric

# We'll also need to install some other system packages.

$ sudo apt-get install git ssh
$ sudo apt-get install python-dev gfortran libatlas-base-dev
## Note that libatlas-base-dev is optional, but will improve numpy performance.


# NOTE: you can set your virtuale environment dir with the environment variable WORKON_HOME
# By default WORKON_HOME is ~/.virtualenvs
# open up $HOME/.bashrc in a text editor and add
export WORKON_HOME=$HOME/v
. /usr/local/bin/virtualenvwrapper.sh

# or whatever directory you want to use for your virtual environments

also, create or open   $HOME/.bash_profile and put the same two lines in there.



# I you open a new terminal, the virtualenvwrapper script should now work.

# First, if your WORKON_HOME directory doesn't exist yet, make it:
$ mkdir -p $WORKON_HOME

in a temporary directory, grab the fabric file and build out a development h1ds environment.
# TODO, describe dev, staging, production environments...

$ cd /tmp
$ git clone git://code.h1svr.anu.edu.au/h1ds/h1ds.git
$ cd h1ds
$ fab dev initiate
$ fab dev deploy

the fab setup script should only be run once in order to set up a virtual environment, the deploy script can be run multiple times, and should be run after any changes are made to the code.

now move across to your development environment

$ workon h1ds_development
$ ./manage.py runcserver --settings=h1ds.settings_development

# you should now be able to use the mdsplus browser, have a look at http://localhost:8000
# you can use a different port using, e.g.
$ ./manage.py runcserver 8001 --settings=h1ds.settings_development

# To get background processes working (for summary database, etc) you'll need to have rabbitmq installed
# currently in ubuntu there seems to be a bug with the default server so you'll need to do 
$ sudo service rabbitmq-server stop
and statr a separate server
# sudo rabbitmq-server
then, in a new terminal
$ workon h1ds_development
$ ./manage.py celeryd -v 2 -B -s celery -E -l INFO --settings=h1ds.settings_development

# the development server is a simple python webserver and shouldn't be used for production.

# the wiki is not set up for the development environment. 
# you can set up a staging server using apache, which will also setup the wiki

$ fab staging initiate
$ fab staging update

# you should now see the server at http://localhost (after you install apache, etc) 

# for a production environment (I haven't tested this for a while...)
$ fab production initiate
$ fab production update



##################################################################################
notes


# fixtures are generated with, e.g.
cd $VIRTUAL_ENV/h1ds
./manage.py dumpdata h1ds_summary --indent 2 --settings=h1ds.settings_development > data/summarydb.json


for staging, apache needs mod_wsgi, and mod_auth_digest (for trac authentication)


